<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.pokemon.player.dao.PlayerMapper">

<resultMap id="dataResultMap" type="kr.co.pokemon.player.dto.PlayerDTO" autoMapping="true">
    <result column="game_money" property="gameMoney" />
    <result column="real_money" property="realMoney" />
    <result column="updated_at" property="updatedAt" />
    <result column="created_at" property="createdAt" />
  </resultMap>

  <select id="selectAll" resultType="kr.co.pokemon.player.dto.PlayerDTO">
    select * from player
  </select>
  <select id="selectById" resultType="kr.co.pokemon.player.dto.PlayerDTO">
    select * from player where id = #{id}
  </select>
  <select id="chooseById" resultType="kr.co.pokemon.player.dto.PlayerDTO">
    select * from player where id = #{id}
  </select>
  
  <insert id="insertPlayer" parameterType="PlayerDTO">
  	insert into player 
  		(id, nickname, tag, password, lv, experience, game_money, real_money, updated_at, created_at)
  	values (
  		#{id}, #{nickname}, #{tag}, #{password}, #{lv}, #{experience}, #{gameMoney}, #{realMoney}, sysdate, sysdate
  	)
  </insert>
  
  <update id="updatePlayer">
  	update player set (
  		nickname = #{nickname},
  		tag = #{tag},
  		profile = #{profile},
  		password = #{password},
  		description = #{description}
  	) where id = #{id}
  </update>
  
  <update id="updatePlayerBySystem">
  	update player set (
  		lv = #{lv},
  		experience = #{experience},
  		game_money = #{gameMoney},
  		real_money = #{realMoney}
  	) where id = #{id}
  </update>
  
  <delete id="deletePlayer">
  	delete from player where id = #{id} 
  </delete>
  
 <select id="selectLogin" parameterType="map" resultType="kr.co.pokemon.player.dto.PlayerDTO">
        select * from player where id = #{id} and password = #{password}
    </select>
    
 <select id="getRandomPlayer" resultType="kr.co.pokemon.player.dto.PlayerDTO">
        select id,nickname,lv from player order by dbms_random.value fetch first 1 rows only
    </select>
    
   <select id="getFriendList" resultType="kr.co.pokemon.player.dto.FriendDTO">
    select
        f.id AS id, 
        f.player_from AS playerFromId, 
        f.player_to AS playerToId, 
        f.is_accept AS isAccept, 
        f.updated_at AS updatedAt, 
        f.created_at AS createdAt,
        p.id AS playerTo_id, 
        p.nickname AS playerTo_nickname, 
        p.lv AS playerTo_lv,
        p.profile AS playerTo_profile
    from friend f join player p ON f.player_to = p.id where f.player_from = #{playerId} and f.is_accept = 1
	</select>
    
    <!-- 친구요청 -->
  <select id="checkFriendRequest">
  	select * from friend where player_form = #{fromId} and player_to = #{toId} and is_accept=0
  </select>  
    
    <!-- 친구 요청 삽입 -->
  <insert id="insertFriendRequest">
  	insert into friend (id,player_from, player_to, is_accept, created_at, updated_at)
  	values (friend_seq.NextVal, #{fromId}, #{toId}, 0, sysdate, sysdate)
  </insert> 
  
    <!-- 친구 요청 수락 -->
  <update id="updateFriendStatus">
        update friend set is_accept = 1, updated_at = sysdate where id = #{requestId};
    </update>
  <!-- 수락된 친구 목록 -->
    <select id="getAcceptedFriends" resultType="kr.co.pokemon.player.dto.FriendDTO">
        select f.id, f.player_from, f.player_to, f.is_accept, f.updated_at, f.created_at,
               p2.id AS player_to_id, p2.nickname AS player_to_nickname, p2.lv AS player_to_lv
        from friend f join player p2 ON f.player_to = p2.id where f.player_from = #{playerId} AND f.is_accept = 1
        union select f.id, f.player_from, f.player_to, f.is_accept, f.updated_at, f.created_at,
        p1.id AS player_from_id, p1.nickname AS player_from_nickname, p1.lv AS player_from_lv
        from friend f join player p1 ON f.player_from = p1.id where f.player_to = #{playerId} AND f.is_accept = 1;
    </select>
  
<!--  
<select id="countPlayerPokemons" resultType="int" parameterType="String">
        select count(*) from player_pokemon where player_id = #{playerId}
    </select>
-->

</mapper>