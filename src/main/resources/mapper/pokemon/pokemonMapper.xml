<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.pokemon.pokemon.dao.PokemonMapper">

  <resultMap id="dataResultMap" type="kr.co.pokemon.pokemon.dto.PokemonDTO" autoMapping="true">
    <result column="gender_rate" property="genderRate" />
    <result column="gender_diff" property="genderDiff" />
    <result column="flavor_text" property="flavorText" />
    <result column="evolution_id" property="evolutionId" />
    <result column="eggGroup_id" property="eggGroupId" />
    <result column="created_at" property="createdAt" />
    <result column="updated_at" property="updatedAt" />
  </resultMap>

  <resultMap id="dataSpritesResultMap" type="kr.co.pokemon.pokemon.dto.PokemonDTO$PokemonSprites" autoMapping="true">
    <result column="back_default" property="backDefault" />
    <result column="back_female" property="backFemale" />
    <result column="back_shiny" property="backShiny" />
    <result column="back_shiny_female" property="backShinyFemale" />
    <result column="front_default" property="frontDefault" />
    <result column="front_female" property="frontFemale" />
    <result column="front_shiny" property="frontShiny" />
    <result column="front_shiny_female" property="frontShinyFemale" />
    <result column="created_at" property="createdAt" />
    <result column="updated_at" property="updatedAt" />
  </resultMap>

  <select id="selectAll" resultMap="dataResultMap" parameterType="kr.co.pokemon.data.dto.PageRequestDTO">
    SELECT * FROM pokemon ORDER BY id OFFSET ((#{page} - 1) * #{size}) ROWS FETCH NEXT #{size} ROWS ONLY
  </select>

  <select id="selectById" resultMap="dataResultMap" parameterType="int">
    SELECT * FROM pokemon WHERE id = #{id}
  </select>
  
  <select id="selectByName" resultMap="dataResultMap" parameterType="String">
  	 SELECT * FROM pokemon WHERE name like '%' || #{name} || '%'
  </select> 
    
  <select id="existById" resultType="int" parameterType="int">
	SELECT CASE
	    WHEN EXISTS (SELECT 1 FROM pokemon WHERE id = #{id}) THEN 1
	    ELSE 0
	END
	FROM dual
  </select>
  
  <insert id="insert">
  	INSERT INTO pokemon
  		( id, name, image, image3d, gender_rate, gender_diff, genus, height, weight, flavor_text, is_legendary, is_mythical )
  	VALUES
  		( #{id}, #{name}, #{image}, #{image3d}, #{genderRate}, #{genderDiff}, #{genus}, #{height}, #{weight}, #{flavorText, jdbcType=CLOB}, #{isLegendary}, #{isMythical} )
  </insert>
  
  <insert id="insertAll" parameterType="java.util.List">
  	INSERT INTO pokemon ( id, name, image, image3d, gender_rate, gender_diff, genus, height, weight, flavor_text, is_legendary, is_mythical )
  	<foreach collection="list" item="item" separator="UNION ALL">
  		SELECT #{item.id}, #{item.name}, #{item.image, jdbcType=VARCHAR}, #{item.image3d, jdbcType=VARCHAR}, #{item.genderRate}, #{item.genderDiff}, #{item.genus}, #{item.height}, #{item.weight}, #{item.flavorText, jdbcType=CLOB}, #{item.isLegendary}, #{item.isMythical} FROM DUAL
  	</foreach>
  </insert>
  
  <select id="selectSpritesById" resultMap="dataSpritesResultMap" parameterType="int">
    SELECT * FROM sprites WHERE id = #{id}
  </select>
  
  <insert id="insertSprites">
  	INSERT INTO sprites
  		( id, back_default, back_female, back_shiny, back_shiny_female, front_default, front_female, front_shiny, front_shiny_female )
  	VALUES
  		( #{id}, #{backDefault, jdbcType=VARCHAR}, #{backFemale, jdbcType=VARCHAR}, #{backShiny, jdbcType=VARCHAR}, #{backShinyFemale, jdbcType=VARCHAR}, #{frontDefault, jdbcType=VARCHAR}, #{frontFemale, jdbcType=VARCHAR}, #{frontShiny, jdbcType=VARCHAR}, #{frontShinyFemale, jdbcType=VARCHAR} )
  </insert>
  
  <insert id="insertAllSprites" parameterType="java.util.List">
  	INSERT INTO sprites ( id, back_default, back_female, back_shiny, back_shiny_female, front_default, front_female, front_shiny, front_shiny_female )
  	<foreach collection="list" item="item" separator="UNION ALL">
  		SELECT #{item.id}, #{item.backDefault, jdbcType=VARCHAR}, #{item.backFemale, jdbcType=VARCHAR}, #{item.backShiny, jdbcType=VARCHAR}, #{item.backShinyFemale, jdbcType=VARCHAR}, #{item.frontDefault, jdbcType=VARCHAR}, #{item.frontFemale, jdbcType=VARCHAR}, #{item.frontShiny, jdbcType=VARCHAR}, #{item.frontShinyFemale, jdbcType=VARCHAR} FROM DUAL
  	</foreach>
  </insert>
  
  <select id="selectAllWithOwnership" resultMap="dataResultMap">
    SELECT 
      p.*,
      CASE WHEN pp.pokemon_id IS NOT NULL THEN 1 ELSE 0 END AS is_owned
    FROM 
      pokemon p
    LEFT JOIN 
      player_pokemon pp ON p.id = pp.pokemon_id AND pp.player_id = #{playerId}
    <if test="page != null">
      OFFSET ((#{page.page} - 1) * #{page.size}) ROWS FETCH NEXT #{page.size} ROWS ONLY
    </if>
  </select>

</mapper>