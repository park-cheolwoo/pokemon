<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.pokemon.pokemon.dao.relationship.PokemonAttackMapper">

  <resultMap id="dataResultMap" type="kr.co.pokemon.pokemon.dto.relationship.PokemonAttackDTO" autoMapping="true">
    <result column="pokemon_id" property="pokemonId" />
    <result column="attack_id" property="attackId" />
    <result column="created_at" property="createdAt" />
    <result column="updated_at" property="updatedAt" />
  </resultMap>
  
  <resultMap id="attackResultMap" type="kr.co.pokemon.play.dto.PokemonOwnAttack" autoMapping="true">
    <result column="types_id" property="typesId" />
    <result column="flavor_text" property="flavorText" />
    <result column="created_at" property="createdAt" />
    <result column="updated_at" property="updatedAt" />
  </resultMap>

  <select id="selectAll" resultMap="dataResultMap" parameterType="kr.co.pokemon.data.dto.PageRequestDTO">
    SELECT * FROM pokemon_attack ORDER BY id OFFSET ((#{page} - 1) * #{size}) ROWS FETCH NEXT #{size} ROWS ONLY
  </select>

  <select id="selectById" resultMap="dataResultMap" parameterType="int">
    SELECT * FROM pokemon_attack WHERE id = #{id}
  </select>

  <select id="selectNoDamageAttackByPokemonId" resultMap="attackResultMap" parameterType="int">
	SELECT
		a.*, p.slot
	FROM
		pokemon_attack p
	JOIN attack a ON a.id = p.attack_id
	WHERE p.pokemon_id = #{pokemonId} AND a.damage = 0
	ORDER BY p.slot DESC
  </select>

  <select id="selectAttackByPokemonId" resultMap="attackResultMap" parameterType="int">
	SELECT
		a.*, p.slot
	FROM
		pokemon_attack p
	JOIN attack a ON a.id = p.attack_id
	WHERE p.pokemon_id = #{pokemonId} AND a.damage > 0
	ORDER BY p.slot DESC
  </select>

  <select id="selectPokemonByAttackId" resultMap="attackResultMap" parameterType="int">
	SELECT
		p.*
	FROM pokemon_attack a
	JOIN pokemon p ON p.id = a.pokemon_id
	WHERE a.attack_id = #{attackId}
	ORDER BY p.id
  </select>

  <select id="selectByPokemonIdAndTypeId" resultMap="attackResultMap">
    SELECT
    a.*, p.slot
    FROM
    pokemon_attack p
    JOIN attack a ON a.id = p.attack_id
    WHERE p.pokemon_id = #{pokemonId} AND a.types_id = #{typesId} AND a.damage > 0
    ORDER BY p.slot DESC
  </select>

  <select id="selectByIds" resultType="java.util.List" parameterType="java.util.List">
    SELECT id FROM pokemon_attack WHERE
	<foreach collection="list" item="id" separator="OR">
		id = #{id}
	</foreach>
  </select>

  <select id="selectByPokemonId" resultMap="dataResultMap" parameterType="int">
    SELECT * FROM pokemon_attack WHERE pokemon_id = #{pokemonId}
  </select>

  <select id="selectByAttackId" resultMap="dataResultMap" parameterType="int">
    SELECT * FROM pokemon_attack WHERE attack_id = #{attackId}
  </select>

  <select id="existAttackAndPokemonId" resultType="int" parameterType="java.util.Map">
    SELECT COUNT(*) FROM pokemon_attack WHERE pokemon_id = #{pokemonId} AND attack_id = #{attackId}
  </select>
  
  <select id="existById" resultType="int" parameterType="int">
	SELECT CASE
	    WHEN EXISTS (SELECT 1 FROM pokemon_attack WHERE id = #{id}) THEN 1
	    ELSE 0
	END
	FROM dual
  </select>
  
  <insert id="insert">
  	INSERT INTO pokemon_attack
  		( id, pokemon_id, attack_id, lv )
  	VALUES
  		( pokemon_attack_seq.NEXTVAL, #{pokemonId}, #{attackId}, #{level} )
  </insert>
  
  <insert id="insertAll" parameterType="java.util.List">
  	INSERT INTO pokemon_attack ( id, pokemon_id, attack_id, lv )
  	SELECT pokemon_attack_seq.NEXTVAL, a.* FROM (
  	<foreach collection="list" item="item" separator="UNION ALL">
  			SELECT #{item.pokemonId} AS pokemon_id, #{item.attackId} AS attack_id, #{item.level} AS lv
  			FROM dual
  	</foreach>) a
  </insert>

</mapper>